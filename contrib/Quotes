<simpson> I mean, to be frank, at some point this is all Prolog reinvention.
<simpson> But whatever.
<dash> sure
<dash> the problem is that the good parts of prolog are all locked away in... prolog implementations
*time passes*
<dash> simpson: i guess we have about half a prolog now
<simpson> dash: Which is appropriate. That's what's supposed to happen, right? We are now complex enough to have an ill-specified and slightly buggy reimplementation of Prolog in our system.
<dash> yeah! we're ahead of all those other suckers who got common lisp instead
%
--> monteBot (~monte@c-24-21-131-247.hsd1.or.comcast.net) has joined #monte
<simpson> monteBot: speak
<monteBot> Hi there!
<simpson> Okay, the latency's good now.
<dash> monteBot: kill
<simpson> dash: It's not yet equipped for that.
<dash> simpson: i'm patient.
%
<dash> well, okay. what's our threat model?
<simpson> Developers want to deploy HTTPS sites.
<simpson> Origin of threat: Developers
%
<dash> simpson: clicking randomly through stackexchange, i think i know how other programmers feel during our design conversations: http://gaming.stackexchange.com/q/214975/2354
<dash> "... i know _some_ of those words?"
<mythmon> dash: can confirm
%
< froztbyte> simpson: a pet hate of mine in REPLs is when something doesn't allow forard/reverse word jumps, back-kill-word, etc
< froztbyte> I don't know how much effort those are to implement without readline
< dash> froztbyte: easy
< froztbyte> but I guess since the parser already does some of that work, parts of it might be reused?
< dash> froztbyte: make emacs your repl frontend
< froztbyte> dash: snrk
< dash> froztbyte: it's been done
< dash> also, there's rlwrap
< froztbyte> oh, I can believe that
< mythmon> froztbyte: without readline? not easy. but then, why not just use readline?
< froztbyte> readline, curses, and Tk
< froztbyte> are some of the ingredients commonly found on a unix/linux system which I've actually very successfully managed to not learn things about
< dash> who'd want to
< froztbyte> heh
< simpson> dash: Oh my. I did not know about rlwrap.
< simpson> Holy fuck now e/rune doesn't suck!
 * simpson *ahem*
< simpson> I mean, yes. Very nifty. Quite. Capital.
%
<dash> simpson: ... I just realized how surprised I am that nobody has referred to auditor stamps as "unreferenceable forges" yet.
%
< simpson> dash, DanC: I got bored and started doing the capnp needful: https://gist.github.com/MostAwesomeDude/025fbd2db873fb470a4bb1cf4a944d91
< wleslie> what code are you working from?
< simpson> I turned capnp inside-out: $ capnp compile -o $(which cat) schema.capnp > meta
< simpson> And I'm working from that compiled schema.
< dash> simpson: Mmm.
< dash> simpson: I was tempted to start on this in rpython.
< dash> simpson: Still might, but your idea is better.
< simpson> dash: Networking? In RPython? :c
* time passes *
< dash> simpson: i'm not a completely sensible fellow
%
< DanC_> -o $(which cat) ?
< wleslie> using cat as an output processor
< wleslie> it's important to select a cat that is docile and soft for this task
%
